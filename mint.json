{
	"$schema": "https://mintlify.com/schema.json",
	"name": "Quais SDK",
	"logo": {
		"dark": "/logo/dark.svg",
		"light": "/logo/light.svg"
	},
	"favicon": "/favicon.svg",
	"colors": {
		"primary": "#e22901",
		"light": "#e22901",
		"dark": "#e22901",
		"anchors": {
			"from": "#e22901",
			"to": "#222222"
		}
	},
	"topbarLinks": [
		{
			"name": "Support",
			"url": "https://discord.gg/quai"
		}
	],
	"topbarCtaButton": {
		"name": "Dashboard",
		"url": "https://dashboard.mintlify.com"
	},
	"anchors": [
		{
			"name": "Github",
			"icon": "github",
			"url": "https://github.com/dominant-strategies/quais-6.js"
		},
		{
			"name": "NPM",
			"icon": "npm",
			"url": "https://www.npmjs.com/package/quais"
		},
		{
			"name": "Quai Docs",
			"icon": "book-open-cover",
			"url": "https://qu.ai/docs/"
		}
	],
	"navigation": [
		{
			"group": "Reference",
			"pages": [
				{
					"group": "Address",
					"pages": [
						"content/interfaces/Addressable",
						"content/type-aliases/AddressLike",
						"content/functions/getAddress",
						"content/functions/getCreate2Address",
						"content/functions/getCreateAddress",
						"content/functions/isAddress",
						"content/functions/isAddressable",
						"content/functions/resolveAddress"
					]
				},
				{
					"group": "Application Binary Interface",
					"pages": [
						"content/classes/AbiCoder",
						"content/classes/ConstructorFragment",
						"content/classes/ErrorDescription",
						"content/classes/ErrorFragment",
						"content/classes/EventFragment",
						"content/classes/FallbackFragment",
						"content/classes/Fragment",
						"content/classes/FunctionFragment",
						"content/classes/Indexed",
						"content/classes/Interface",
						"content/classes/LogDescription",
						"content/classes/NamedFragment",
						"content/classes/ParamType",
						"content/classes/Result",
						"content/classes/StructFragment",
						"content/classes/TransactionDescription",
						"content/classes/Typed",
						"content/interfaces/JsonFragment",
						"content/interfaces/JsonFragmentType",
						"content/type-aliases/FormatType",
						"content/type-aliases/FragmentType",
						"content/type-aliases/InterfaceAbi",
						"content/type-aliases/ParamTypeWalkAsyncFunc",
						"content/type-aliases/ParamTypeWalkFunc",
						"content/functions/checkResultErrors",
						"content/functions/decodeBytes32String",
						"content/functions/encodeBytes32String"
					]
				},
				{
					"group": "Constants",
					"pages": [
						"content/variables/MaxInt256",
						"content/variables/MaxUint256",
						"content/variables/MessagePrefix",
						"content/variables/MinInt256",
						"content/variables/N",
						"content/variables/WeiPerEther",
						"content/variables/ZeroAddress",
						"content/variables/ZeroHash",
						"content/variables/quaisymbol"
					]
				},
				{
					"group": "Contracts",
					"pages": [
						"content/classes/BaseContract",
						"content/classes/Contract",
						"content/classes/ContractEventPayload",
						"content/classes/ContractFactory",
						"content/classes/ContractTransactionReceipt",
						"content/classes/ContractTransactionResponse",
						"content/classes/ContractUnknownEventPayload",
						"content/classes/EventLog",
						"content/classes/UndecodedEventLog",
						"content/interfaces/BaseContractMethod",
						"content/interfaces/ConstantContractMethod",
						"content/interfaces/ContractDeployTransaction",
						"content/interfaces/ContractEvent",
						"content/interfaces/ContractInterface",
						"content/interfaces/ContractMethod",
						"content/interfaces/ContractTransaction",
						"content/interfaces/DeferredTopicFilter",
						"content/interfaces/Overrides",
						"content/interfaces/WrappedFallback",
						"content/type-aliases/ContractEventName"
					]
				},
				{
					"group": "Cryptographic Utilities",
					"pages": [
						"content/classes/Signature",
						"content/classes/SigningKey",
						"content/type-aliases/ProgressCallback",
						"content/type-aliases/SignatureLike",
						"content/functions/computeHmac",
						"content/functions/keccak256",
						"content/functions/lock",
						"content/functions/pbkdf2",
						"content/functions/randomBytes",
						"content/functions/ripemd160",
						"content/functions/scrypt",
						"content/functions/scryptSync",
						"content/functions/sha256",
						"content/functions/sha512"
					]
				},
				{
					"group": "Hashing Functions",
					"pages": [
						"content/classes/TypedDataEncoder",
						"content/interfaces/TypedDataDomain",
						"content/interfaces/TypedDataField",
						"content/functions/dnsEncode",
						"content/functions/ensNormalize",
						"content/functions/hashMessage",
						"content/functions/id",
						"content/functions/isValidName",
						"content/functions/namehash",
						"content/functions/solidityPacked",
						"content/functions/solidityPackedKeccak256",
						"content/functions/solidityPackedSha256",
						"content/functions/verifyMessage",
						"content/functions/verifyTypedData"
					]
				},
				{
					"group": "Providers",
					"pages": [
						"content/classes/AbstractProvider",
						"content/classes/AbstractSigner",
						"content/classes/Block",
						"content/classes/BrowserProvider",
						"content/classes/EnsPlugin",
						"content/classes/FallbackProvider",
						"content/classes/FeeData",
						"content/classes/FeeDataNetworkPlugin",
						"content/classes/GasCostPlugin",
						"content/classes/IpcSocketProvider",
						"content/classes/JsonRpcApiProvider",
						"content/classes/JsonRpcProvider",
						"content/classes/Log",
						"content/classes/Network",
						"content/classes/NetworkPlugin",
						"content/classes/NonceManager",
						"content/classes/SocketBlockSubscriber",
						"content/classes/SocketEventSubscriber",
						"content/classes/SocketPendingSubscriber",
						"content/classes/SocketProvider",
						"content/classes/SocketSubscriber",
						"content/classes/TransactionReceipt",
						"content/classes/UnmanagedSubscriber",
						"content/classes/VoidSigner",
						"content/classes/WebSocketProvider",
						"content/interfaces/AbstractProviderPlugin",
						"content/interfaces/BlockParams",
						"content/interfaces/ContractRunner",
						"content/interfaces/Eip1193Provider",
						"content/interfaces/EventFilter",
						"content/interfaces/Filter",
						"content/interfaces/FilterByBlockHash",
						"content/interfaces/LogParams",
						"content/interfaces/MinedBlock",
						"content/interfaces/Provider",
						"content/interfaces/Signer",
						"content/interfaces/Subscriber",
						"content/interfaces/TransactionReceiptParams",
						"content/interfaces/WebSocketLike",
						"content/type-aliases/AbstractProviderOptions",
						"content/type-aliases/BlockTag",
						"content/type-aliases/DebugEventBrowserProvider",
						"content/type-aliases/FallbackProviderOptions",
						"content/type-aliases/GasCostParameters",
						"content/type-aliases/JsonRpcApiProviderOptions",
						"content/type-aliases/JsonRpcError",
						"content/type-aliases/JsonRpcPayload",
						"content/type-aliases/JsonRpcResult",
						"content/type-aliases/MinedTransactionResponse",
						"content/type-aliases/Networkish",
						"content/type-aliases/OrphanFilter",
						"content/type-aliases/PerformActionFilter",
						"content/type-aliases/PerformActionRequest",
						"content/type-aliases/PerformActionTransaction",
						"content/type-aliases/PreparedTransactionRequest",
						"content/type-aliases/ProviderEvent",
						"content/type-aliases/Subscription",
						"content/type-aliases/TopicFilter",
						"content/type-aliases/MinedTransactionResponse",
						"content/type-aliases/WebSocketCreator",
						"content/functions/getDefaultProvider",
						"content/functions/showThrottleMessage"
					]
				},
				{
					"group": "Transactions",
					"pages": [
						"content/classes/AbstractTransaction",
						"content/classes/FewestCoinSelector",
						"content/interfaces/TransactionLike",
						"content/type-aliases/AccessList",
						"content/type-aliases/AccessListEntry",
						"content/type-aliases/AccessListish",
						"content/type-aliases/TransactionRequest",
						"content/functions/accessListify",
						"content/functions/computeAddress",
						"content/functions/recoverAddress"
					]
				},
				{
					"group": "Utilities",
					"pages": [
						"content/classes/EventPayload",
						"content/classes/FetchRequest",
						"content/classes/FetchResponse",
						"content/classes/FixedNumber",
						"content/interfaces/ActionRejectedError",
						"content/interfaces/BadDataError",
						"content/interfaces/BufferOverrunError",
						"content/interfaces/CallExceptionError",
						"content/interfaces/CancelledError",
						"content/interfaces/EventEmitterable",
						"content/interfaces/InsufficientFundsError",
						"content/interfaces/InvalidArgumentError",
						"content/interfaces/MissingArgumentError",
						"content/interfaces/NetworkError",
						"content/interfaces/NonceExpiredError",
						"content/interfaces/NotImplementedError",
						"content/interfaces/NumericFaultError",
						"content/interfaces/ReplacementUnderpricedError",
						"content/interfaces/ServerError",
						"content/interfaces/TimeoutError",
						"content/interfaces/TransactionReplacedError",
						"content/interfaces/UnexpectedArgumentError",
						"content/interfaces/UnknownError",
						"content/interfaces/UnsupportedOperationError",
						"content/interfaces/quaisError",
						"content/type-aliases/BigNumberish",
						"content/type-aliases/BytesLike",
						"content/type-aliases/CallExceptionAction",
						"content/type-aliases/CallExceptionTransaction",
						"content/type-aliases/CodedquaisError",
						"content/type-aliases/ErrorCode",
						"content/type-aliases/FetchGatewayFunc",
						"content/type-aliases/FetchGetUrlFunc",
						"content/type-aliases/FetchPreflightFunc",
						"content/type-aliases/FetchProcessFunc",
						"content/type-aliases/FetchRetryFunc",
						"content/type-aliases/FixedFormat",
						"content/type-aliases/GetUrlResponse",
						"content/type-aliases/Listener",
						"content/type-aliases/Numeric",
						"content/type-aliases/UnicodeNormalizationForm",
						"content/type-aliases/Utf8ErrorFunc",
						"content/type-aliases/Utf8ErrorReason",
						"content/variables/Utf8ErrorFuncs",
						"content/functions/assert",
						"content/functions/assertArgument",
						"content/functions/assertNormalize",
						"content/functions/assertPrivate",
						"content/functions/concat",
						"content/functions/dataLength",
						"content/functions/dataSlice",
						"content/functions/decodeBase58",
						"content/functions/decodeBase64",
						"content/functions/defineProperties",
						"content/functions/encodeBase58",
						"content/functions/encodeBase64",
						"content/functions/formatEther",
						"content/functions/formatQuai",
						"content/functions/formatUnits",
						"content/functions/fromTwos",
						"content/functions/getAddressDetails",
						"content/functions/getBigInt",
						"content/functions/getBytes",
						"content/functions/getBytesCopy",
						"content/functions/getNumber",
						"content/functions/getShardForAddress",
						"content/functions/getTxType",
						"content/functions/getUint",
						"content/functions/hexlify",
						"content/functions/isBytesLike",
						"content/functions/isCallException",
						"content/functions/isError",
						"content/functions/isHexString",
						"content/functions/isUTXOAddress",
						"content/functions/makeError",
						"content/functions/mask",
						"content/functions/parseEther",
						"content/functions/parseQuai",
						"content/functions/parseUnits",
						"content/functions/resolveProperties",
						"content/functions/stripZerosLeft",
						"content/functions/toBeArray",
						"content/functions/toBeHex",
						"content/functions/toBigInt",
						"content/functions/toNumber",
						"content/functions/toQuantity",
						"content/functions/toTwos",
						"content/functions/toUtf8Bytes",
						"content/functions/toUtf8CodePoints",
						"content/functions/toUtf8String",
						"content/functions/uuidV4",
						"content/functions/zeroPadBytes",
						"content/functions/zeroPadValue"
					]
				},
				{
					"group": "Wallets",
					"pages": [
						"content/classes/BaseWallet",
						"content/classes/HDNodeVoidWallet",
						"content/classes/QuaiHDWallet",
						"content/classes/Mnemonic",
						"content/classes/Wallet",
						"content/type-aliases/CrowdsaleAccount",
						"content/type-aliases/EncryptOptions",
						"content/type-aliases/KeystoreAccount",
						"content/functions/decryptCrowdsaleJson",
						"content/functions/decryptKeystoreJson",
						"content/functions/decryptKeystoreJsonSync",
						"content/functions/encryptKeystoreJson",
						"content/functions/encryptKeystoreJsonSync",
						"content/functions/getAccountPath",
						"content/functions/getIndexedAccountPath",
						"content/functions/isCrowdsaleJson",
						"content/functions/isKeystoreJson",
						"content/functions/qiHDAccountPath",
						"content/functions/quaiHDAccountPath"
					]
				},
				{
					"group": "Wordlists",
					"pages": [
						"content/classes/LangEn",
						"content/classes/LangEs",
						"content/classes/Wordlist",
						"content/classes/WordlistOwl",
						"content/classes/WordlistOwlA",
						"content/variables/wordlists"
					]
				}
			]
		}
	],
	"footerSocials": {
		"x": "https://twitter.com/QuaiNetwork",
		"github": "https://github.com/dominant-strategies/quais-6.js",
		"linkedin": "https://www.linkedin.com/company/dominant-strategies"
	}
}
